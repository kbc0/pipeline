pipeline {
    agent any

    tools {
        maven 'Maven3'
        jdk   'Java'
    }

    environment {
        JENKINS_URL = "${BUILD_URL}"
    }

    stages {

        /* Declarative Pipeline checkout’u zaten yaptı,
           ekstra checkout stage’ine gerek yok. */
        stage('Build + Test + Sonar') {
            steps {
                dir('java-app') {                        // <‑‑ POM klasörü
                    withMaven(maven: 'Maven3') {
                        sh 'mvn clean test'

                        sh """
                          mvn sonar:sonar \
                            -Dsonar.projectKey=java-app \
                            -Dsonar.links.ci=${JENKINS_URL}
                        """
                    }
                }
            }
            post {
                always {
                    junit 'java-app/target/surefire-reports/*.xml'
                    publishHTML(
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'java-app/target/site/jacoco',
                        reportFiles: 'index.html',
                        reportName: 'JaCoCo Coverage Report'
                    )
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 1, unit: 'MINUTES') {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Quality gate failed: ${qg.status}"
                        }
                    }
                }
            }
        }
    }

    post { always { cleanWs() } }
}
